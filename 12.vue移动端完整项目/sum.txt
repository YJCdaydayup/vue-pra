第一节课
1.只需要改变数据即可，无需操作dom

第二节课
1.制作图标字体,svg矢量图，https://icomoon.io,修改fontname为自己的名字
2.定义一个组件就创建一个文件夹，此组件的资源就进维护
3.stylus就是在css基础上不需要冒号和括号
4.基本的样式，比如reset.css可以直接写在模版html里面
5.mounted钩子里面可以直接写函数和表达式，获取上一个页面传递的值都是通过$route.query
6.使用router-link和router-view做页面内组件切换时，注意2点，先设置页面路由的children，在设置router-link的to="/goods"路径即可

第三节课
1.改变router-link的样式，可以直接给这个router-link添加class来改
2.通过伪类和缩放实现1px
3.生命周期的钩子函数，就需要写成es6的写法，里面可以直接写表达式了
4.消除子元素之间的空字符间隔，先设置父元素font-size:0,在设置资源的font-size即可
5.设置路由激活状态为active，然后设置对应的router-link的ative的样式，linkActiveClass: 'active'
6.全局使用某个插件 import VueResource from 'vue-resource'   Vue.use(VueResource)

第四节课
1.如果设置vertical-align对不齐，可能是空格字符没有去掉的问题，父标签的font-size：0即可
2.&.active 是表示给自己找个元素添加一个新的class为active，一般用于要动态改变的class
3.生命周期中的created函数，是在vm创建之后，里面可以直接使用this.name='Sara'，就默认给它添加了一个属性name

第五节课
1.熟练掌握sticky-footer布局，内容高度不满屏时，在屏幕下面，满屏时，在内容下面
   分两层子div
	<div class=detail-wrapper> // 设置detail-wrapper的高度min-height：100%
	    <div class=“detail-main”></div> // 设置detail-main的paddding-bottom: 64px
	</div>
	<div class=“detail-close”></div> // 设置detail-close的margin：-64px auto
2.学习 阮一峰的网络日志: Flex 布局教程: 语法篇
3.flex布局，当父标签为display: flex时，子标签flex都为1则平分，只设置部分为flex：1,其他的子标签不设置的话，会在父标签宽度下减去没有设置的标签的宽度，再进行平分flex；1的标签的宽度
4.stylus语法要求严格缩减格式，不然会报错
5.Vue中的动画，谁需要动画，就用<transition name=“fade”></transition>包住，然后定义:
	.fade-enter-active, .fade-leave-active {
 		 transition: opacity .5s; // 此为进入或离开的过渡，这里写时间和效果
	}
	.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {
		  opacity: 0; // 这里写进来的状态
	}
6.:class=“itemClass” 如果单独使用，就是和属性联合起来使用，如果和v-for结合使用，就是动态的class就是对应的变量的值
7.可以将icon定义成一个组件，自己完成做优化。
8.能用class的就一定用class，不要用标签名


第五节课
1.better-scroll库进行安装，研究https://zhuanlan.zhihu.com/p/27407024
2.在任何地方写的this.shuxing,就相当于给这个变量添加了这个属性

第六节课
1.使用router-view时，可以直接:seller=“seller”传递属性值过去，便于每个激活组件使用
2.props注意type的类型比较严格，书写上可以使用delivery-price，对应props的deliveryPrice
3.在vue中，props属性是一个对象或数组时，default需要是一个函数:
	selectFoods: {
	     type: Array,
	     default() {
		return []
	     }			
	}
4.当处理列表中的列表时，每个li的绑定处理就从数据对象入手，改变对象的某个属性值来改变dom的class，当对象不包含某个属性时，可以动态的添加属性，但要通过this.$set(food,'count',1)来给food对象添加属性count，并赋值为1，这样这个count就自动加入了数据绑定。
5.定义组件的时候，先想好这个组件需要什么参数，然后再组件里面直接利用这个参数编写组件即可，后面在导入组件的时候在考虑如何把数据传递进去
6.定义的小组件，在大组件中引用后，最好在外层包装一个wrapper用于定位
7.定义动画，请看增加food按钮组件里面的用法:现在外层定义一个transition，然后给最外层的class添加初始类，&.move-enter,&.move-leave-to定义初始状态，并在最外层组件里面直接写transition:all 0.4s linear,对于继续定义子组件的动画，就在各个动画class下加子组件的class，子组件的transition要自己写自己的，动画效果可以结合@keyframes动画实现更为复杂的效果
8.Vue中的动画只在v-if v-show v-for时才会触发
9.通过class=“inner-hook”来获取dom时的class，都用hook命名好些


第七节课
1.对不定高的dom进行Y轴偏移动画时，有个技巧就是transform: translate3d(0,-100%,0),默认是translate3d(0,0,0)
2.组件里面定义的任何标签，如果写它的定位是position:absolute时，这个相对的就是这个组件
3.使用emit派发事件时可以:this.$emit('cart-add',event.target),父组件要@cart-add=“addCart”;,但定义ref时，不要加-，摇动ref=“listContent”
4.父组件要让子组件执行子组件的方法，可以先通过ref找到子组件，然后调用其方法:this.$refs.shopcart.drop(el);
5.让一个标签同时执行多个动画可以用一个wrapper包裹住，wrapper执行一个动画，inner执行另一个动画


第八节课
1.组件最外面的div设置成display:absolute,代表相对于它的父组件，要设置成相对于屏幕就是fixed，组件里面的子div设置成display:absolute,如果上一级找不到relative，就是直接相对于当前组件(无论父组件display是什么)
2.空对象属性一般要用: selectFood: {}空对象表示
3.定义方法的时候，如果是给外部调用的方法，就直接写方法名即可，如: selectFood() {}，如果是私有的方法，一般要加下划线，如:_init() {}
4.宽度是width:100%, 要定义一个宽高相等的容器，可以:  width: 100%  height: 0 padding-top:100%,同时如果要在里面填满图片，可以   img
        position: absolute // 这个父标签要写relative
        top: 0
        left: 0
        width: 100%
        height: 100%
5.对于动画，如果通过改变父标签的v-show来控制子标签的动画时，一定要给父标签一个transition，不然会由于父标签的突兀隐藏造成子标签的突兀隐藏而看不到子标签的动画效果
6.vue动画与@keyframes同用时，@keyframes默认动画就按照正常的原有的用法使用，但是消失时的@keyframes动画就要写在&.move-leave-to下面


第九节课
1.@click事件中传递dom对象可以直接传递$event过去，不能拼错
2.better-scroll的dom模式不能变，否则滚动失效，就是外层为wrapper，内层一级只有一个div作为高度，有多个就无法滚动了
3.要对列表进行不同条件下的筛选时，可以使用v-show="needShow(rating.rateType,rating.text)"函数进行条件筛选
4.对于列表的展示，多个li的互斥展示时，可以先定义好公用样式，然后使用:class="{'active':selectType==2}"
5.对于只有两种状态的切换，就在父标签中添加一个:class="{on: onlyContent}"进行绑定切换即可
6.对于v-for中遍历时，需要从数组中拿某个属性进行判断而选择class时，就用:class="{'icon_thumb_up':rating.rateType==1,'icon_thumb_down':rating.rateType==2}"
7.对v-for遍历生成的li进行筛选时，可以使用v-show="func(type,text)",定义的这个函数，会当这个函数实现里面的某个全局变量变化时自动调用返回bool来控制每个li的显示


第十节课
1.创建better-scroll的时间很重要，一般选在数据请求回调后或者监听到属性传递过来后，watch: {seller(new,old) {this.$nextTick(()=>{new BScroll(…)})}}，如果滚动不了，检查是否在this.$nextTick里面，参考seller组件中BScroll的用法
2.white-space:nowrap横向超过时不被折行
3.使用better-scroll创建横向滚动的时候，需要在数据拿到后通过计算给中间那层div或ul重新赋予狂宽度，否则默认就是父标签的宽度，务必记住重新计算宽度。