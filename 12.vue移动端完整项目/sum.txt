第一节课
1.只需要改变数据即可，无需操作dom

第二节课
1.制作图标字体,svg矢量图，https://icomoon.io,修改fontname为自己的名字
2.定义一个组件就创建一个文件夹，此组件的资源就进维护
3.stylus就是在css基础上不需要冒号和括号
4.基本的样式，比如reset.css可以直接写在模版html里面
5.mounted钩子里面可以直接写函数和表达式，获取上一个页面传递的值都是通过$route.query
6.使用router-link和router-view做页面内组件切换时，注意2点，先设置页面路由的children，在设置router-link的to="/goods"路径即可

第三节课
1.改变router-link的样式，可以直接给这个router-link添加class来改
2.通过伪类和缩放实现1px
3.生命周期的钩子函数，就需要写成es6的写法，里面可以直接写表达式了
4.消除子元素之间的空字符间隔，先设置父元素font-size:0,在设置资源的font-size即可
5.设置路由激活状态为active，然后设置对应的router-link的ative的样式，linkActiveClass: 'active'
6.全局使用某个插件 import VueResource from 'vue-resource'   Vue.use(VueResource)

第四节课
1.如果设置vertical-align对不齐，可能是空格字符没有去掉的问题，父标签的font-size：0即可
2.&.active 是表示给自己找个元素添加一个新的class为active，一般用于要动态改变的class
3.生命周期中的created函数，是在vm创建之后，里面可以直接使用this.name='Sara'，就默认给它添加了一个属性name

第五节课
1.熟练掌握sticky-footer布局，内容高度不满屏时，在屏幕下面，满屏时，在内容下面
   分两层子div
	<div class=detail-wrapper> // 设置detail-wrapper的高度min-height：100%
	    <div class=“detail-main”></div> // 设置detail-main的paddding-bottom: 64px
	</div>
	<div class=“detail-close”></div> // 设置detail-close的margin：-64px auto
2.学习 阮一峰的网络日志: Flex 布局教程: 语法篇
3.flex布局，当父标签为display: flex时，子标签flex都为1则平分，只设置部分为flex：1,其他的子标签不设置的话，会在父标签宽度下减去没有设置的标签的宽度，再进行平分flex；1的标签的宽度
4.stylus语法要求严格缩减格式，不然会报错
5.Vue中的动画，谁需要动画，就用<transition name=“fade”></transition>包住，然后定义:
	.fade-enter-active, .fade-leave-active {
 		 transition: opacity .5s; // 此为进入或离开的过渡，这里写时间和效果
	}
	.fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {
		  opacity: 0; // 这里写进来的状态
	}
6.:class=“itemClass” 如果单独使用，就是和属性联合起来使用，如果和v-for结合使用，就是动态的class就是对应的变量的值
7.可以将icon定义成一个组件，自己完成做优化。
8.能用class的就一定用class，不要用标签名


第五节课
1.better-scroll库进行安装，研究https://zhuanlan.zhihu.com/p/27407024
2.在任何地方写的this.shuxing,就相当于给这个变量添加了这个属性

第六节课
1.使用router-view时，可以直接:seller=“seller”传递属性值过去，便于每个激活组件使用
2.props注意type的类型比较严格，书写上可以使用delivery-price，对应props的deliveryPrice
3.在vue中，props属性是一个对象或数组时，default需要是一个函数:
	selectFoods: {
	     type: Array,
	     default() {
		return []
	     }			
	}


