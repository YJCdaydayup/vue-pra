1.快速排序三部曲:先随机找到数组中的一个数作为基准点，在建立两个数组，分别存储这个数左边和右边的数，然后利用递归进行比较；时间复杂度(n2/4)

2.栈区有编译器自动分配和释放，存储函数的参数值和局部变量的值，堆区一般有程序员自己分配和释放，诺程序员不释放，程序结束时可能有OS回收，堆数据结构是一个树结构如堆排序，栈数据结构是先进后出的数据结构(比如控制器的跳转，函数的执行)；

3.栈的插入和删除都是在一端进行的，而队列是在两端进行的，队列数据结构是先进先出的(比如，排队买票)；

4.强制缓存：前端优化中可以使用expried或者cache-control来进行强制缓存，由于expired设置的是绝对时间，当浏览器修改本地时间时会造成缓存失效或者误差，所以http1.1之后使用cache-control的相对时间，这段时间内客户端不向服务器发送请求，返回的状态码是304告诉服务器使用缓存；

5.对比缓存，当强制缓存超出时间后，就需要使用对比缓存，由服务器决定缓存是否失效，可以与强制缓存一起使用，对比缓存有last-modified和ETag实体标签

6.避免iframe图片等标签使用空的src；避免使用行内样式；

7.js中垃圾回收的方法是标记清除和引用计数，标记清除是给内存中的所有变量进行标记然后去掉全局变量和闭包里面的变量，剩余的就会清除掉；

8.new的原理:let obj = {};
obj.__proto__ = Dog.prototype;
Dog.call(obj); // 继承Dog自身属性和方法

9.规范: 
  不要同一行声明多个变量
  使用=== ！==
  使用对象字面量
  switch 带default
  函数不要有时候有return有时候没有return
  for if带括号
  forin带var

10.字面量对象中的箭头函数属性的this为{}，test: function() {} 和test() {}一样

11.前端SEO，title， description，keywords权重逐渐降低，采用语义化的html代码让搜索引擎更易理解，重要内容放在前面(搜索引擎抓取HTML从上而下的，有的对长度有限制)，重要的内容不用js输出(爬虫不会执行js)，少用iframe(搜索引擎不会抓取iframe的内容)，提供网站速度；

12.img的title是鼠标放上去显示的，alt是图片的描述，一般加载不出来就会显示；

13.OPTIONS方法可用于跨域时浏览器进行预检，一般用于获取URL支持的方法，如get，post

14.浏览器通过url加载资源时，会先查看是否有强制缓存，expired和catch-control，没有就进性DNS域名解析，找到真实的IP(浏览器缓存，本机缓存，hosts文件，路由器缓存)，再通过IP向服务器发起请求建立三次握手，服务器检查HTTP头部是否存在缓存验证信息，如果数据新鲜就返回304，不新鲜就查询数据库将数据通过TCP发送浏览器，浏览器接收到响应后，根据情况关闭TCP连接或者保留重用，关闭四次挥手，浏览器就检查状态码，资源可缓存就缓存,如果需要gzip解析就解析，能显示的就显示，不能显示的就下载下来

15.浏览器的内核分为渲染引擎和js引擎，渲染引擎负责获取网页内容和现实方式，输出之显示器或者打印机，js引擎实现动态效果；

16.iframe会阻塞主页面的onload事件，搜索引擎无法解读iframe的内容不利于SEO，和主页面共享连接池，浏览器对相同域名的连接有限制所以会影响主页面加载，最好通过js动态给iframe设置src值；

17.页面加载时link同时加载，而@import引用的css要等到页面被加载完后才加载，link时xhtml标签无兼容问题；

18.doctype是放在html标签里面的，告诉浏览器用什么文档类型规范解析文档；严格模式是以该浏览器支持的最高标准来运行；混杂模式相对宽松和向下兼容，DOCTYPE不存在或格式不正确会以混杂模式加载；

19.HTML全局属性：class data-* dragable id lang元素内容的语言 style title

20.svg绘制的是独立的DOM节点可以绑定事件和修改，矢量的，canvas是画布会失真；

21.localhost和127.0.0.1是不需要联网的，localhost是域名，127，0，0，1是对应的ip，本机的IP就是本地对外开放访问的IP地址

22.基本数据类型中，当全局变量通过参数传递或者用新的变量持有都只是复制一个值给它，然后原变量和它没有任何关系；函数里面可以访问全局变量，并改变其值；

23.var p = new Person()，栈中保持p(保存的是堆对象person的地址)， 而new Person()则存在堆中；

24.当函数传递对象类型时，默认在函数里面就产生了一个新的同名引用指向这个对象，所有的操作都是通过新的引用来做的，如果此时person = new Person()，那么新的引用指向了新的地址但是原来传递进来的引用是没有变的；

25.像素比=物理像素／css像素，其中css像素就是pc下的像素大小，物理像素是移动端下的像素，可以通过window.devicePixelRatio获取像素比；

26.垂直居中办法，弹性布局flex，绝对定位+transform，position:absolute+left:0,right:0,top:0,bottom:0,margin:auto（这种的前提是子div必须有自己显式的定义宽高）

27.实现三角形可以通过设置border来做，但是必须写出自己的width:0，height：0才行；

28.rem的原理是相对html标签的fontSize的大小，实现方式是，保证设计稿的相对屏幕的比例一致，所以，fs =   function setRem(pwidth, rate) {
    var htmlNode = document.querySelector('html');
    var oWidth = document.documentElement.clientWidth;
    htmlNode.style.fontSize = 100 * oWidth / pwidth + 'px';
  }
  setRem(375, 100);
  document.getElementById('box').style.width = 2 + 'rem';

29.变量提升和函数提升，前面的提升依然排在前面，当变量名和函数名重名时，这个变量就时这个函数了，点语法优先(当点前面有括号时(),优先执行()前面的代码)

30.函数节流：一个函数执行一次后，只有大雨设定的执行周期才会执行第二次，比如频繁触发的函数(处于优化性能的角度，在规定时间内，函数只触发一次)

31.防抖函数，一个需要频繁触发的函数，在规定时间内只让最后一次生效，前面不生效,（防止按钮在一定时间内被重复点击），原理每次点击就将上一次的timer去掉，只有最有一次的timer才有效；




 