1.快速排序三部曲:先随机找到数组中的一个数作为基准点，在建立两个数组，分别存储这个数左边和右边的数，然后利用递归进行比较；时间复杂度(n2/4)

2.栈区有编译器自动分配和释放，存储函数的参数值和局部变量的值，堆区一般有程序员自己分配和释放，诺程序员不释放，程序结束时可能有OS回收，堆数据结构是一个树结构如堆排序，栈数据结构是先进后出的数据结构(比如控制器的跳转，函数的执行)；

3.栈的插入和删除都是在一端进行的，而队列是在两端进行的，队列数据结构是先进先出的(比如，排队买票)；

4.强制缓存：前端优化中可以使用expried或者cache-control来进行强制缓存，由于expired设置的是绝对时间，当浏览器修改本地时间时会造成缓存失效或者误差，所以http1.1之后使用cache-control的相对时间，这段时间内客户端不向服务器发送请求，返回的状态码是304告诉服务器使用缓存；

5.对比缓存，当强制缓存超出时间后，就需要使用对比缓存，由服务器决定缓存是否失效，可以与强制缓存一起使用，对比缓存有last-modified和ETag实体标签

6.避免iframe图片等标签使用空的src；避免使用行内样式；

7.js中垃圾回收的方法是标记清除和引用计数，标记清除是给内存中的所有变量进行标记然后去掉全局变量和闭包里面的变量，剩余的就会清除掉；

8.new的原理:let obj = {};
obj.__proto__ = Dog.prototype;
Dog.call(obj); // 继承Dog自身属性和方法
 