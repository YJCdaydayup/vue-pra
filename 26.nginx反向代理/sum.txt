概念
1.nginx，反向代理、负载均衡和静态服务器 自由，开源，高性能的HTTP服务器和反向代理服务器，也是IMAP POP3 SMTP代理服务器，可以作为HTTP服务器进行网站的发布，也可以反向代理实现负载均衡
2.代理就是渠道，正向代理就是请求发给代理服务器，代理服务器访问国外网站，然后将访问到的数据传递给我们
3.反向代理，主要用于集群分布式部署，隐藏了服务器信息，代理了多个服务器A，服务器B，服务器C，按照一定的规则分发给服务器进行处理
4.一般情况下，正向代理和反向代理同时存在，多个客户端同时访问一个服务器，然后这个服务器访问Nginx反向代理服务器，然后分发到不同服务器
5.这种分法的规则就是均衡规则
6.负载均衡分为硬件负载均衡和软件负载均衡，硬负载成本高，稳定性高，安全性高，比如移动，联通，软件负载均衡是结合主机硬件实现的一种消息队列分发机制
7.weight轮询（默认）：接收到的请求按照顺序逐一分配到不同的后端服务器，即使在使用过程中，某一台后端服务器宕机，nginx会自动将该服务器剔除出队列，请求受理情况不会受到任何影响。 这种方式下，可以给不同的后端服务器设置一个权重值（weight），用于调整不同的服务器上请求的分配率；权重数据越大，被分配到请求的几率越大；该权重值，主要是针对实际工作环境中不同的后端服务器硬件配置进行调整的。
8.ip_hash：每个请求按照发起客户端的ip的hash结果进行匹配，这样的算法下一个固定ip地址的客户端总会访问到同一个后端服务器，这也在一定程度上解决了集群部署环境下session共享的问题
9.fair：智能调整调度算法，动态的根据后端服务器的请求处理到响应的时间进行均衡分配，响应时间短处理效率高的服务器分配到请求的概率高，响应时间长处理效率低的服务器分配到的请求少；结合了前两者的优点的一种调度算法。但是需要注意的是nginx默认不支持fair算法，如果要使用这种调度算法，请安装upstream_fair模块
10.url_hash：按照访问的url的hash结果分配请求，每个请求的url会指向后端固定的某个服务器，可以在nginx作为静态服务器的情况下提高缓存效率。同样要注意nginx默认不支持这种调度算法，要使用的话需要安装nginx的hash软件包

11.在服务端使用node和在客户端使用基本一致，使用pm2开启node服务，此时node接口是http://localhost:1234，但是在客户端无法访问，这个时候就需要代理服务器，使用nginx反向代理node服务接口